<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ticTacToePlayer1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKUAAABNCAMAAADw4lQHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAMAUExURdTW2NTW2dXX2tbY2tbY29fa3Nja3dnc3trd39vd4Nze4N3f4d7g4d7g4t/h4+Dh4+Di
        4+Di5OHj5eLk5uPl5+Tm5+Tm6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuO
        M00AAAAJcEhZcwAADr0AAA69AUf7kK0AAAAZdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuMTJDBGvs
        AAAR/UlEQVRoQ42aiZqrKBCFE9tdXAD1/R91/lNg1CR9e85809ctUNR6Cn3sYC3AT6tDUHNSuRBDjMse
        lrive1j3Zkt3t2lMB+9YR+fcGJewRs6GWX9PbOseYwhLuF/e9yX4XwbMiH3bmZR7UzZjlmKPSFkve9zC
        FkKwK3tgis7ucmbXviAgpXOsTE/E+9RL2EOYfQhuiGPTs4QwrulWBHtgxl8wo7QkJc9lrN65foxb3OaF
        MYOvNf2vkt0g7btx99F75Fr3KV/ft6hFxzWGod/muun7wXVdn++ign0vit+m8C8pD4QJbfD4tobdr/08
        u1E/DihBQ+3/to2gFYW4oRk/FYd5ksJwoI5hutH1Q1i67rUITdE/MeDx/E3gDdtepZTJTKotzTQ3c7rB
        lMiIKYshn/8DmG+bxyVuY3FYiEWvccY4HOuaR5yQXQwzxojTPp/POk/nx+OHhvanRsrgsk+M2eOxHBGw
        dqY5tAr8sm1OgXWq5x+Q5flZdjx+sq774vPpGyI6ZcJ9fD4rh6dwxaV/D7AOSdk/q4vvxm1nbfvQJJFH
        4pZ/CPkNhysOZ/onth0vJKoNhHbcF5Zo833AuxIVItZYFsSeXXGvUM5Aytg/H+fkPrDwPVSHbfPK8Ko5
        xql6WfHEdHOjBCWeeWjnZbIMNPBIXJz7os66bpthM/mH0WJCGe1tFkk5T8khAuKgSR0N52K20RTtFalz
        XxDzaOqSDd1P5eN6X3wIvUwSVh/4hwwRveZ+xcsF3bOp+imJaUZELReTRxMoR8/aTGgxP/uGmAZXdl9d
        U4yrZYJjHEeicMuyvMYVnkNc8G0BMdGDW8ZFR18QqrppWUs+JUoZPD8ax774qc0vQVNjUL9P34Q8QAUi
        fF1VSCsg5Y0RIcsRKW8/VdDGlfxoy56dUsQd1wvdc8T3g8LMML9cyLv68ajWLOXoZ3leoL79Ligzb4Ra
        0ScpzXfWCimbOQl5jq4zDJNr7oc3RleV/cVLBpREovv073loaizpHjs+ufhtXT3lYUS7V4RXwhRYB7FS
        N0nI5AcT5XQgO3I4FBbIBi0Xb/wSLQjdFiTHZ1lV3ZwFHWYt6qPCbaYJ12wPJVUXVtlmKp9+n5tXvDNc
        dZMaT1twTZPxGHGUanHKtSmK15qUhuSUw6ceMaMJKTTOfoHDMlqgwtn9E8TrPpRziI8YJgSE9MTmWQwD
        Bixy8oyy5qkeQK6fFuM+p46NY3hioCiP3zGcciRcwMX2Pamwrizj89mmIFTZl5R4nQ5uaHvyyfpA037D
        NL6hHkbkqg/Bth/OcN0Tsgma9o4seGAjCZPm/Dika0xE0Q/zgJG4EoZb8AttlvH57FL+npVHpfpPx9wn
        vzLcQ7xC0W/aWav2fFJlvjgqt4mgmI08eC92cToEoQ66ILNYiiWnIvJHeK+VSViUxc8w2oOjSrSTDm7j
        grgs+OKKxRkN6+TLN/SSspAIJDyTniy4fejmwFQPnsLoFWMWCyQjlrTsfXaFhLVt6rps0NG8bRbnWAPx
        uhWqmB45MPdEoKJQtQcefmchhjX0MnlR47nyPT3BL34jb2s/wHxwAD0H4xsdFFNsP8aySY+c0EIumMSI
        XYzjLSnEMIdlZR2+f1CCWIHVhdcza/SzYmRQ/BQ580hMHv2q9dCLbUH3RpufrMZoRG4M8qTmS/G/QbFM
        NCcp+D8ZjlaBwrDHtvePFvdJRoxD1ScZqFEJnbR5SMl8fRroHV0TVF2ljHwlI66BS1v5N3s2yAVxkiiF
        RJYqrTXqZB6yfHY1V6kagZeUlO3iqDXix+WEwsSZACxZ/9DJ1B6vUd692isD3fLflxufmLCBOfW+DQGW
        qLIxpvXJL4+QHSmadlXJJYM4H+zAlDjWVPPkespH2HYa+oEuifT4iyQHzfwbc8+aIKa7a5eNMLWLKZ4e
        OPyRqBZfPUTMWNOUKYXrq8qkNL3BBice94PCYfMz650Uhvz3zRESdPcOa4U/EVsaT8wSliluVo6wfZr3
        wYQ4lB2T3F+JdVujRbbrSb0nT5ObsdhaVdSG4LfSVl444XLPjxQlTxTks4zlaF0+EEZlW26KBfD3oMOP
        nmlx8i8/28I0KY1PqWVLgPdgFJLxRhuMkBr00M1QDIkcnYM1POlJMvnUoBL7PenSxDBdjD2zSlx3sBFj
        btHLsT6Rnsl+mKHiaAtNBthYS6JgsRaF00VXv+zvn2uF2yb+lGGV/9t0JFgRfDQzFI3W8XrIpPS4fspZ
        fyP6FrmzGNvmFZc6nJWybL9iKH7OsWg3Osx+VQLdxfjefhnEe3Ag7HPsexwwKRss9z+FBOOuvQ+CfQ4e
        VpW9AfZDtkLwjuR15sfx2S+U4PBWfu6zxarjAuUS+2wzKnvPC8Q4LkYw4OJmFzR+D4ATL9PjH4E8DiuV
        a87JfAq2aduUYa/98PyMHfHa3CjgHUH8KaxEOAMRQGjhTQLFeFgaymVYbeweunLnvgdo7rhufr2SAtCn
        Yme5xD9BvyrDHvtzBt/TqK2hfJ/ZkB8cK62ZB3xfW/OZLr/woMZGRwIkMxuTCA/wQQ+EWVIG17ezOFmI
        PR44u/m0DkRef12uswekeJoDX77bEc5n6XDqULStNc6ExwZD0ckFj5YrsxMD5iE9Wj0ez+/miTOJzhu1
        H1WC/FD/klLuQOcQ7bmxinGC4SxX9PTOTG5ZFafD1VVxb7DokZhoPxWl5RdVslxlSOyyxsUvyhi4e771
        B9D9NoX79k1MqZ3OjjyBwmV9c3EVSnviRJISf+hXYMdl+XVuI2HCRtuOexjj+z/gMXxYIhS3vCmEeVLB
        mukKZRbrz8hG70GepdyXGs6astpyo9YJ22qK5CCMefPwZGkfjcAdar78Bo2P/Xs+mlbcuudOW55FU8ZS
        qrvo6pByH9voX9ucB47pN0oMx7IyMWbiqnbaPdqWy3hfEOgX0qTLmUeFhSHWlUmbZ3uZmc6KUCa1n8Oa
        lHqEPIMoOjsRYI4AgmIYkVKbNHgGAc5J2ln5rSq/QFtBYPKsfOXErLTLUvtLETBQztEm2QsJkkQPOumq
        NkvMPt6VGerqeG8hPWrpck2PVKGSY7o2caPkbjkcvkAmSRu8W9ot4RCjQnkZqbzFlLDUWCr5nUvp67FP
        SpDqZ9eZYqJrOibj9HVVHSPAyIL2nWU/E2Y21taXUmN6H7FOaU8509cPSG3crQdsIP5ofRK1O929Yu0n
        GlyLJPe09PXYtydSmsgiymmPaS1V504hcX2s7Gfx9mzeEUeIYYQV80OIfBRvZuClUgZGKFPCBSQG1ZRp
        oBvmVHOlG19AnkNPuj/+SAb8skHKnMb5JUWCgkVX1ryiLHp+w7LronYvz0JC/vCMaDVc3sj9GB1tZ40w
        rkg+fYGcUHaA3a2sO7WtX7s9oKRpA4SG0ZDSPx4vQkgr6Ku4VKXusWCt15IdtySkXU2ILaPo/rYc7QeV
        VjZATP/zfL53jkovzNZSYPDwNOYvRJOHB/HrfCIp1+pkF4w00y5UdGEAOk55oQvheHEQ98OK6d+efzna
        bI8Zb0NK85R6Ds52WcTHDpAYczFA/7l+wP1+EZLV6FXhcVeZyAj2AYVEXgVPAUSkYz9NzemUXB5HCCZm
        ahHUTzb1TzUodtPu36U+bNoR3+F6229GfgNN9SuYLV9eIB/3uRQqnKZtmP19zevlTYf2BHgub8LNPXC4
        XwzIW5XVXR5aeVwI3pE0+R3HRDRARHkW8yYlv+Yh2nP+KoLXbYjNbPspFyiajytLitS89x8PKcNC0zBC
        iu1yguitmmq9PfyAuL/BJV/DnRa1q9+kbFQkWOzWw1o90RvmS5l6Yc07cBqvE3lEBJ0zNCDTxCghxxEN
        h2ZREtD2Gpdp4b9FtV4F5XVWz0yhtwcJQb2+cEg5mIVIoelVhFKM3tZ8kVGwJGEJmVg0100YJKbe/qgB
        G+XKfV13g1St9jCN2ox30rVajkjrpFN45lfcbU3GzIpNUm5eu2t1i5RwHrQpf1v2sdlukfUCulqIaY1M
        FjzZi0dMmhgN6Ikt7jZNL/KwyaaQW9gkZawur/rEg8Yxe1WcuurYJX8otesgv0mZ0OOZhfE1ODm5Te8D
        Poqsxt9oLgw6Q+8nS7m9VQOiGHpRSmxjl6lOycj3t4cuxgCsIh30BI8J7/ROd28qkBZgKsaGaWnN8dbh
        FfVQOGLU9mZGT8WBpmi9H+XwxDqI+/i0syBl6W8if39Bg6quuAYpNwmZ6oQnfKQbXFxiHqEzV00SQ0Ku
        tjchc9PVFZCmY+vpK3q9qspJ3DRLfebCYbe/IFH2ckDKBSGP9IsSaYZFLY7FM+TMA6ZMCXlIqXniUKFt
        njw98wXjaBPlCUKeL6XH8uu5y2uOf4E65YIsHvtj00h0jzGYNumS1ZOd4UZVJpomZiqIdk77TPdJAXoz
        ObRC7ykXWjLMfX9hwDI1dji+VvkDflymS76c7R0IqSuMHeo0KUd7mSIpk1RJStzyKD59P2tDg8BN54Be
        i1WIT9MtKJkO76yDi4ze/I+vK7QerfOQcqkG7bbPKjxhnrF5aLZI6Bf1tE71beHw3UM7rnexlou/coH8
        wUQ2a5DTPnp7rYlp3PGZxu/w0DC58pql7BuIJwqcM3Wm8MS63WHr5g2m2BO5cweBJD41LMx6DSHmFSiJ
        H5XzDWhhg73JWf4NX5VQF+LPpBRvDtRDusipSQOT2FwZCG47+x0BZXbMlnPXCWU9U2qoy5vWsJJeIM/7
        1JERvyNSZ7kX1SyopD44WVCcUYwYquNVKaqYXbuPf1oF7kA2JcXeglbmtpSz2bvRs8mzXOmxFSkg9AM1
        KV8+sYYe3idOYVC2pQzhy6zO5qgPRsJN3Cd/BvMnKNg4dXsQGxELO3JFF2pwG0e9nPaZlrAv/SRb5BsJ
        YRyMm6ZmAegltt732BasXcl35GSUJ73f/l8wzYUxtiNlQVxDm28RAfWpnXATRP2jaj/SuqHv7nYn+LKU
        6XxE2hgea3S4ZLokMNvQVPpXJ5/2+A5m1bM4ThyxEHK4thrwdhNS5IiifwIn1qP8CV2Xvq5KUC4eyiTl
        jAnSNzR6p3uTZFKCLFXVpeCLDoJtTv4KUVbPpIpDHlzE4UgUsLIk5D7U7pzIYao89tJduiP7QsBJymYh
        5kiXIs2OGL9IsodWDK6EFOqMiV/Zmt4GdvVVtX6C+xOJRDVtVw9Rl69A4fS0Xi7brxjz4j96KZInvnzP
        Gdq2H4b6qRRlO6osHJbgw+MycewoMgWGghaaszHtkoe2spjeQbxjdIuntPqZGNRul/bY1vE9OyBlfRI2
        ZLwaKqHDIYvylUXFRy0MifHxDMBepTB9BSPZ1e6xpnzb3k1+2S5RtuEPuZcRMXb6buUTTrGuL8kS4pBZ
        x4nhWdTHA9p2la/bSSgflyUbzzzPmW8hZI+8HlI/+wvEV7HPkeQ+gZT6OvQ0hj6ByIcJZ1ugN9krFO94
        +FXHQZSU10jUp6xhV2UxUJL/IaWMw7QvZb0DbuOIKLrsbJAII3l3IDsPzmtjQ8zvENykzPTQt/39nRYd
        H9n+RSTs7fo7dCmuDDt5KqIq2K9YJSYZMmsihDffXe0jJbiEX8NC9Y5dn5fx2PqfuvtFA4Q43nsK/i4B
        xUbNCbkmbXyKwtkNgWNwWzWR78g8R4Ik1Dyt1WE+bKVf0yQxr+Q/pXoQV3kv7ws2fR/zbpaM2Ez6aogk
        ZFvC89jS8m0kt4z0KcDk52l+fceq3tR3hzLt/efK/JBD7iV/gqHYhvMNDzJo2X4TxHYD9hGTc7BZ/3qF
        +xmCn/wCkyL/xGlovFJc2kQQjj7TcP313J3ujaqr57PW/qyFfNQrC+XpdJsLpiRJ+fOV3E+Jd5FnqDpB
        bdgFsa6ZeSaqpW5pYaAPIx3YN1SGVEcybmvMJzixEbGmy/0Jd5QiL27jyfC2y6qa+fZSKwGLacKFKo8f
        1fevbfqBjEbGIz3l/XTlDSzF2o9aAnEYR2svvu9Shhq1HfIJ5sb8OU5HfcVV2TcwkrJMl9/ALPwACwRY
        01hY3ozTaDtmKJjhAtR+vfDxFcNRHF/M0CacxTeuwhxoHCRX5tUJGlS8nUFAd2WfmpUy4j+kVL7k76TN
        Nz+V9LQQ49zU4OBiK1jsxsoo2VTdO1H7DbEsq6HfVnk+UynZXhKCKnIt2Yp22/f/ACo2r+CByTHIAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>